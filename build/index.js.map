{"version":3,"sources":["../src/index.js"],"names":["require","config","createEventAdapter","slackSigningSecret","process","env","SLACK_SIGNING_SECRET","slackEvents","port","PORT","on","event","channelId","channel","id","util","joinChannel","getActivePunishmentsForSlackUser","user","punishments","length","forEach","p","fields","removeUserFromChannel","undefined","channel_type","slackUserIsAdmin","isAdmin","sendPm","message","text","startsWith","RegExp","exec","replace","time","reason","muteUserInSlack","match","muteUserInChannel","banUserFromChannel","subtype","deleteMessage","ts","start","server","console","log","address"],"mappings":"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","sourcesContent":["// pull ENV variables\nrequire('dotenv').config()\nimport '@babel/polyfill';\nimport * as util from './util'\nimport * as chrono from 'chrono-node'\n\nconst { createEventAdapter } = require('@slack/events-api')\nconst slackSigningSecret = process.env.SLACK_SIGNING_SECRET\nconst slackEvents = createEventAdapter(slackSigningSecret)\nconst port = process.env.PORT || 3000\n\nslackEvents.on('channel_created', async event => {\n  let channelId = event.channel.id\n\n  // bot should be in every public channel\n  await util.joinChannel(channelId)\n})\n\nslackEvents.on('channel_left', async event => {\n  let channelId = event.channel\n\n  // the bot is everpresent and is not allowed to leave channels\n  await util.joinChannel(channelId)\n})\n\nslackEvents.on('member_joined_channel', async event => {\n  // get punishments of member\n  let punishments = await util.getActivePunishmentsForSlackUser(\n    event.user,\n    'channel_ban'\n  )\n  if (punishments.length == 0) {\n    return\n  }\n\n  punishments.forEach(async p => {\n    // punishment is valid\n    if (event.channel == p.fields['Channel ID']) {\n      util.removeUserFromChannel(event.user, event.channel)\n      // we should send a message here as to why the removal\n    }\n  })\n})\n\n// handles mutes and removal of messages from people who try to get small bits of text out when banned\nslackEvents.on('message', async event => {\n  if (event.user == undefined) {\n    return\n  }\n\n  if (event.channel_type == 'im') {\n    let isAdmin = await util.slackUserIsAdmin(event.user)\n    if (!isAdmin) {\n      util.sendPm(event.user, '🕶️')\n      return\n    }\n\n    let message = event.text\n    if (message.startsWith('mute')) {\n      // mute @name for 20 minutes because they were being a jerk\n      let user = new RegExp(/(?<=mute\\s).*.+?(?=\\sfor)/)\n        .exec(message)[0]\n        .replace('<@', '')\n        .replace('>', '')\n      let time = new RegExp(/(?<=for\\s).*.+?(?=\\sbecause)/).exec(message)[0]\n      let reason = new RegExp(/(?<=because\\s).*/).exec(message)[0]\n\n      util.sendPm(\n        event.user,\n        'Muting <@' +\n          user +\n          '> globally for ' +\n          time +\n          ' because ' +\n          reason +\n          '...'\n      )\n      util.muteUserInSlack(event.user, user, reason, time)\n      util.sendPm(event.user, '<@' + user + '>' + ' has been muted globally!')\n\n      util.sendPm(\n        user,\n        'You have been muted globally for reason: ' +\n          reason +\n          \". Please contact someone in @staff if you have any questions. You'll be good to go again in \" +\n          time\n      )\n    } else if (message.startsWith('channel mute')) {\n      // channel mute @name in #channel for 20 minutes because they were being a jerk\n      let user = new RegExp(/(?<=mute\\s).*.+?(?=\\sin)/)\n        .exec(message)[0]\n        .replace('<@', '')\n        .replace('>', '')\n      let channel = new RegExp(/(?<=in\\s).*.+?(?=\\sfor)/)\n        .exec(message)[0]\n        .match(/(?<=\\#)(.*?)(?=\\|)/)[0]\n      let time = new RegExp(/(?<=for\\s).*.+?(?=\\sbecause)/).exec(message)[0]\n      let reason = new RegExp(/(?<=because\\s).*/).exec(message)[0]\n\n      util.sendPm(\n        event.user,\n        'Muting <@' +\n          user +\n          '> in <#' +\n          channel +\n          '> for ' +\n          time +\n          ' because ' +\n          reason +\n          '...'\n      )\n      util.muteUserInChannel(event.user, user, channel, reason, time)\n      util.sendPm(\n        event.user,\n        '<@' + user + '> has been muted for ' + time + ' in <#' + channel + '>!'\n      )\n\n      util.sendPm(\n        user,\n        'You have been muted in <#' +\n          channel +\n          '> for ' +\n          time +\n          ' for reason: ' +\n          reason +\n          \". Please contact someone in @staff if you have any questions. You'll be good to go again in \" +\n          time\n      )\n    } else if (message.startsWith('ban')) {\n      // ban @name from #channel for 20 minutes because they were a jerk\n      let user = new RegExp(/(?<=ban\\s).*.+?(?=\\sfrom)/)\n        .exec(message)[0]\n        .replace('<@', '')\n        .replace('>', '')\n      let channel = new RegExp(/(?<=from\\s).*.+?(?=\\sfor)/)\n        .exec(message)[0]\n        .match(/(?<=\\#)(.*?)(?=\\|)/)[0]\n      let time = new RegExp(/(?<=for\\s).*.+?(?=\\sbecause)/).exec(message)[0]\n      let reason = new RegExp(/(?<=because\\s).*/).exec(message)[0]\n\n      util.sendPm(\n        event.user,\n        'Banning <@' +\n          user +\n          '> from <#' +\n          channel +\n          '> for ' +\n          time +\n          ' because ' +\n          reason +\n          '...'\n      )\n\n      util.removeUserFromChannel(user, channel)\n      util.banUserFromChannel(event.user, user, channel, reason, time)\n\n      util.sendPm(\n        '<@' +\n          user +\n          '> has been banned from <#' +\n          channel +\n          '> for ' +\n          time +\n          '!'\n      )\n      util.sendPm(\n        user,\n        'You have been banned from <#' +\n          channel +\n          '> for ' +\n          time +\n          ' for reason: ' +\n          reason +\n          \". Please contact someone in @staff if you have any questions. You'll be good to go again in \" +\n          time\n      )\n    }\n  }\n\n  // punishment logic below\n  // we don't want these because they don't have users\n  if (\n    event.subtype == 'message_deleted' ||\n    event.subtype == 'message_changed'\n  ) {\n    return\n  }\n\n  let punishments = await util.getActivePunishmentsForSlackUser(\n    event.user,\n    'all'\n  )\n\n  if (punishments.length == 0) {\n    return\n  }\n\n  punishments.forEach(async p => {\n    if (\n      (p.fields['Type'] == 'channel_ban' ||\n        p.fields['Type'] == 'channel_mute') &&\n      event.channel == p.fields['Channel ID']\n    ) {\n      util.deleteMessage(event.channel, event.ts)\n    }\n\n    if (p.fields['Type'] == 'full_mute') {\n      util.deleteMessage(event.channel, event.ts)\n    }\n  })\n})\n\n;(async () => {\n  const server = await slackEvents.start(port)\n  console.log(`Listening for events on ${server.address().port}`)\n  // let punishments = await util.getActivePunishmentsForSlackUser('UE8DH0UHM', 'channel_ban')\n  // console.log(punishments)\n})()\n"],"file":"index.js"}